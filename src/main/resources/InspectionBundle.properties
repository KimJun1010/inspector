fastjson.auto.type.fix=!Fix: remove setAutoTypeSupport
fastjson.auto.type.msg=SecInspector: Fastjson Unserialization Risk
fastjson.auto.type.name=SecInspector 1001: Fastjson Unserialize

fastjson.unserialize.type.msg=SecInspector: Fastjson Unserialization Risk, make sure Fastjson is a safe version
fastjson.unserialize.type.name=SecInspector 1002: Fastjson Unserialize

xml.decoder.unserialize.msg=SecInspector: XMLDecoder Unserialization Risk
xml.decoder.unserialize.name=SecInspector 1003: XMLDecoder Unserialize

scriptEngine.rce.type.msg=SecInspector: ScriptEngine RCE Risk
scriptEngine.rce.name=SecInspector 1004: ScriptEngine RCE

nashornScriptEngine.rce.type.msg=SecInspector: NashornScriptEngine RCE Risk
nashornScriptEngine.rce.name=SecInspector 1005: NashornScriptEngine RCE

compilable.rce.type.msg=SecInspector: Compilable RCE Risk
compilable.rce.name=SecInspector 1006: Compilable RCE

snakeYaml.unserialize.type.msg=SecInspector: SnakeYaml Unserialization Risk
snakeYaml.unserialize.type.name=SecInspector 1007: SnakeYaml Unserialize

jYaml.unserialize.type.msg=SecInspector: JYaml Unserialization Risk
jYaml.unserialize.type.name=SecInspector 1008: JYaml Unserialize

jsonIO.unserialize.type.msg=SecInspector: JsonIO Unserialization Risk
jsonIO.unserialize.type.name=SecInspector 1009: JsonIO Unserialize

yamlBeans.unserialize.type.msg=SecInspector: YamlBeans Unserialization Risk
yamlBeans.unserialize.type.name=SecInspector 1010: YamlBeans Unserialize

hessian.unserialize.type.msg=SecInspector: Hessian Unserialization Risk
hessian.unserialize.type.name=SecInspector 1011: Hessian Unserialize

castor.unserialize.type.msg=SecInspector: Castor Unserialization Risk
castor.unserialize.type.name=SecInspector 1012: Castor Unserialize

burlap.unserialize.type.msg=SecInspector: Burlap Unserialization Risk
burlap.unserialize.type.name=SecInspector 1013: Burlap Unserialize

kryo.unserialize.type.msg=SecInspector: Kryo Unserialization Risk
kryo.unserialize.type.name=SecInspector 1014: Kryo Unserialize

xStream.unserialize.type.msg=SecInspector: XStream Unserialization Risk
xStream.unserialize.type.name=SecInspector 1015: XStream Unserialize

objectInputStream.unserialize.type.msg=SecInspector: ObjectInputStream Unserialization Risk
objectInputStream.unserialize.type.name=SecInspector 1016: ObjectInputStream Unserialize

runtime.rce.type.msg=SecInspector: Runtime/ProcessBuilder RCE Risk
runtime.rce.type.name=SecInspector 1017: Runtime/ProcessBuilder RCE

mvel.rce.type.msg=SecInspector: MVEL RCE Risk
mvel.rce.name=SecInspector 1018: MVEL RCE

groovy.rce.type.msg=SecInspector: Groovy RCE Risk
groovy.rce.name=SecInspector 1019: Groovy RCE

ognl.injection.rce.type.msg=SecInspector: OGNL-Injection RCE Risk
ognl.injection.rce.name=SecInspector 1020: OGNL-Injection RCE

jexl.rce.type.msg=SecInspector: JEXL RCE Risk
jexl.rce.name=SecInspector 1021: JEXL RCE

spel.rce.type.msg=SecInspector: SPEL RCE Risk
spel.rce.name=SecInspector 1022: SPEL RCE

el.rce.type.msg=SecInspector: EL RCE Risk
el.rce.name=SecInspector 1023: EL RCE

expression.rce.type.msg=SecInspector: Expression RCE Risk
expression.rce.name=SecInspector 1024: Expression RCE

bsh.rce.type.msg=SecInspector: BSH RCE Risk
bsh.rce.name=SecInspector 1025: BSH RCE

xslt.rce.type.msg=SecInspector: BSH RCE Risk
xslt.rce.name=SecInspector 1026: BSH RCE

jschOS.rce.type.msg=SecInspector: JSchOS RCE Risk
jschOS.rce.name=SecInspector 1027: JSchOS RCE

jython.rce.type.msg=SecInspector: Jython RCE Risk
jython.rce.name=SecInspector 1028: Jython RCE

rhino.rce.type.msg=SecInspector: Rhino RCE Risk
rhino.rce.name=SecInspector 1029: Rhino RCE

classLoader.rce.type.msg=SecInspector: ClassLoader RCE Risk
classLoader.rce.name=SecInspector 1030: ClassLoader RCE

validation.ssti.type.msg=SecInspector: Validation SSTI Risk
validation.ssti.name=SecInspector 1031: Validation SSTI

velocity.ssti.type.msg=SecInspector: Velocity SSTI Risk
velocity.ssti.name=SecInspector 1032: Velocity SSTI

pebble.ssti.type.msg=SecInspector: Pebble SSTI Risk
pebble.ssti.name=SecInspector 1033: Pebble SSTI

jinjava.ssti.type.msg=SecInspector: Jinjava SSTI Risk
jinjava.ssti.name=SecInspector 1034: Jinjava SSTI

freemarker.ssti.type.msg=SecInspector: Freemarker SSTI Risk
freemarker.ssti.name=SecInspector 1035: Freemarker SSTI

thymeleaf.ssti.type.msg=SecInspector: Thymeleaf SSTI Risk
thymeleaf.ssti.name=SecInspector 1036: Thymeleaf SSTI

beetl.ssti.type.msg=SecInspector: Beetl SSTI Risk
beetl.ssti.name=SecInspector 1037: Beetl SSTI

system.exit.type.msg=SecInspector: System EXIT DOS Risk
system.exit.name=SecInspector 1038: System EXIT DOS

pattern.matches.type.msg=SecInspector: Pattern Matches DOS Risk
pattern.matches.name=SecInspector 1039: Pattern Matches DOS

file.read.type.msg=SecInspector: Arbitrary File Read Risk
file.read.name=SecInspector 1040: Arbitrary File Read

io.files.write.type.msg=SecInspector: Arbitrary File Write Risk
io.files.write.name=SecInspector 1041: Arbitrary File Write

commonIO.file.write.type.msg=SecInspector: Arbitrary File Write Risk
commonIO.file.write.name=SecInspector 1042: Arbitrary File Write

jdbc.unserialize.type.msg=SecInspector: JDBC Unserialization Risk
jdbc.unserialize.name=SecInspector 1043: JDBC Unserialization

javax.redirect.type.msg=SecInspector: Javax Redirect Risk
javax.redirect.name=SecInspector 1044: Javax Redirect

jakarta.redirect.type.msg=SecInspector: Jakarta Redirect Risk
jakarta.redirect.name=SecInspector 1045: Jakarta Redirect

reflect.type.msg=SecInspector: Reflect Risk
reflect.name=SecInspector 1046: Reflect Risk

placeholder.string.sqli.msg=SecInspector: Suspected SQL Injection Risk
placeholder.string.sqli.name=SecInspector 1047: Placeholder SQL Injection

polyadic.expression.sqli.msg=SecInspector: Suspected SQL Injection Risk
polyadic.expression.sqli.name=SecInspector 1048: Polyadic SQL Injection

mybatis.annotation.sqli.fix=!Fix: replace by #{hashtag}
mybatis.annotation.sqli.msg=SecInspector: SQL Injection Risk
mybatis.annotation.sqli.name=SecInspector 10049: Mybatis Annotation SQL Injection

jackson.databind.default.typing.annotation.fix=!Fix: replace with JsonTypeInfo.Id.NAME
jackson.databind.default.typing.name=SecInspector 1050: Jackson Unserialize
jackson.databind.default.typing.default.fix=!Fix: remove enableDefaultTyping
jackson.databind.default.typing.msg=SecInspector: Jackson Unserialization Risk

netty.response.splitting.fix=!Fix: enable validation
netty.response.splitting.msg=SecInspector: Netty Response Splitting Risk
netty.response.splitting.name=SecInspector 1051: Netty Response Splitting Risk

open.saml2.ignore.comment.name=SecInspector 1052: OpenSAML2 Authentication Bypass
open.saml2.ignore.comment.msg=SecInspector: OpenSAML2 Authentication Could be Bypassed
open.saml2.ignore.comment.fix=!Fix: Ignore Comment

outdated.encryption.inspector.msg=SecInspector: Outdated Encryption Used
outdated.encryption.inspector.name=SecInspector 1053: Outdated Encryption Used

predictable.seed.fix=!Fix: remove seed
predictable.seed.msg=SecInspector: Predictable Seed Used
predictable.seed.name=SecInspector 1054: Predictable Seed Used

replace.pseudorandom.generator.name=SecInspector 1055: Unsafe Pseudorandom Generator Used
replace.pseudorandom.generator.msg=SecInspector: Unsafe Pseudorandom Generator Used
replace.pseudorandom.generator.fix=!Fix: replace by SecureRandom

spring.security.debug.enabled.fix=!Fix: disable debug
spring.security.debug.enabled.msg=SecInspector: SpringSecurity Debug Opened Risk
spring.security.debug.enabled.name=SecInspector 1056: SpringSecurity Disable Debug Mode

spring.session.fix.protection.name=SecInspector 1057: Spring Session Fixation Risk
spring.session.fix.protection.msg=SecInspector: Spring Session Fixation Protection Disabled
spring.session.fix.protection.fix=!Fix: Enable Protection

weak.hash.inspector.msg=SecInspector: Weak Hash Algorithm Used
weak.hash.inspector.name=SecInspector 1058: Weak Hash Used

mybatis.xml.sqli.fix=!Fix: replace by #{hashtag}
mybatis.xml.sqli.msg=SecInspector: SQL Injection Risk
mybatis.xml.sqli.name=SecInspector 1059: Mybatis XML SQL Injection

ldap.unserialize.fix=!Fix: set returnObj False
ldap.unserialize.msg=SecInspector: LDAP Unserialization Risk
ldap.unserialize.name=SecInspector 1060: LDAP Unserialize

jndi.injection.msg=SecInspector: JNDI Injection Risk
jndi.injection.name=SecInspector 1061: JNDI Injection

xxe.inspector.fix=!Fix: Disallow External Entity
xxe.inspector.msg=SecInspector: Suspected XXE Risk
xxe.inspector.name=SecInspector 1062: XML External Entity Injection

apache.ssrf.msg=SecInspector: Apache SSRF Risk
apache.ssrf.name=SecInspector 1063: Apache SSRF

java.url.ssrf.msg=SecInspector: Java URL SSRF Risk
java.url.ssrf.name=SecInspector 1064: Java URL SSRF

jsonp.ssrf.msg=SecInspector: Jsonp SSRF Risk
jsonp.ssrf.name=SecInspector 1065: Jsonp SSRF

okhttp.ssrf.msg=SecInspector: OKhttp SSRF Risk
okhttp.ssrf.name=SecInspector 1066: OKhttp SSRF

google.ssrf.msg=SecInspector: Google CommonIO SSRF Risk
google.ssrf.name=SecInspector 1067: Google CommonIO SSRF

spring.ssrf.msg=SecInspector: Spring SSRF Risk
spring.ssrf.name=SecInspector 1068: Spring SSRF

board.cors.allow.origin.msg=SecInspector: Allowed Origin too broad
board.cors.allow.origin.name=SecInspector 1069: Board CORS Allowed Origin Setting

hardcoded.credentials.name=SecInspector 1070: Hardcoded Credentials Risk
hardcoded.credentials.msg=SecInspector: Hardcode Credential Found

hardcoded.ip.name=SecInspector 1071: Hardcoded IP Address
hardcoded.ip.msg=SecInspector: Hardcoded IP Found

public.controller.on.spring.msg=SecInspector: "@RequestMapping" methods should be "public"
public.controller.on.spring.name=SecInspector 1072: "@RequestMapping" methods should be "public"
public.controller.on.spring.fix=!Fix: Make It Public

base.sqli.msg=SecInspector: SQL Injection Risk
base.sqli.name=SecInspector 1073: SQL Injection

#placeholder.string.sqli.fix=help: show help
#placeholder.string.sqli.msg=MomoSec: Suspected SQL Injection Risk
#placeholder.string.sqli.name=Momo 1002: Placeholder SQL Injection
polyadic.expression.sqli.fix=help: show help


regex.dos.fix=!Fix: replace by RE2/J
#regex.dos.msg=MomoSec: regexDos Risk
#regex.dos.name=Momo 1005: RegexDos

xstream.unserialize.fix=!Fix: Enable Safe Check
xstream.unserialize.msg=MomoSec: XStream Unserialization Risk
xstream.unserialize.name=Momo 1011: XStream Unserialize






